package main

import (
	"fmt"
	"sort"
)

func main() {
	arr := []int{5, 2, 9, 1, 5, 6}

	fmt.Println("Исходный массив:", arr)

	//1ый вариант
	sort.Ints(arr)
	fmt.Println("Отсортированный массив:", arr)

	//2ой вариант
	arr2 := []int{5, 2, 9, 1, 5, 6}

	quickSort(arr2, 0, len(arr2)-1)
	fmt.Println("Отсортированный массив arr2:", arr2)

}

// Через разбиение Хоара

func quickSort(data []int, low, high int) {
	if low < high { //если длина массива меньше 2, то сортировать его нет смысла
		var p int
		oporElement := data[low+(high-low)/2] // выбираем опорный элемент как среднюю позицию в массиве
		// (в меньшую строну если в массиве четное кол-во элементов)
		i := low  //первый индекс указываем как начало отрезка сортировки
		j := high // второй индекс указываем как конец отрезка сортировки
		for {
			for data[i] < oporElement { // движемся слева и ищем элемент больший либо равный опорному
				i++
			}
			for data[j] > oporElement { // движемся справа и ищем элемент меньший либо равный опорному
				j--
			}
			if i >= j { // если индексы встретились, выходим из цикла перебора элементов
				p = j
				break
			}
			data[i], data[j] = data[j], data[i] // если не встретились, меняем местами данные и сдвигаем индексы на один шаг
			i++
			j--
		}

		quickSort(data, low, p) // рекурсивно вызываем функцию
		quickSort(data, p+1, high)
	}

}
